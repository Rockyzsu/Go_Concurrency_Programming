//位运算符示例
package main

import "fmt"

func main() {
	//二进制数值表示
	a, b := 0b00111100, 0b10001101
	//&按位与运算符,参与运算的两数各对应的二进位相与
	fmt.Printf("%b & %b = %b \n", a, b, a&b) //111100 & 10001101 = 1100
	//|按位或运算符,参与运算的两数各对应的二进位相或
	fmt.Printf("%b | %b = %b \n", a, b, a|b) //111100 | 10001101 = 10111101
	//^按位异或运算符，参与运算的两数各对应的二进位相异或，
	//当两对应的二进位相异时，结果为1
	fmt.Printf("%b ^ %b = %b \n", a, b, a^b) //111100 ^ 10001101 = 10110001
	//<<左移运算符，左边的运算数的各二进位全部左移若干位，
	//<<右边的数指定移动的位数，高位丢弃，低位补0
	fmt.Printf("%b<<3 = %b \n", a, a<<3) //111100<<3 = 111100000
	//>>右移运算符，左边的运算数的各二进位全部右移若干位，
	//>>右边的数指定移动的位数
	fmt.Printf("%b>>3 = %b \n", a, a>>3) //111100>>3 = 111
}
